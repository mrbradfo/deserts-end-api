name: Integration Tests with MySQL

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  login-to-amazon-ecr:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: # Use the AWS credentials from the AWS CodeArtifact domain
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          mask-aws-account-id: "false"
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2
        with:
          mask-password: "false"
    outputs:
      registry: ${{ steps.login-ecr.outputs.registry }}
      docker_username: ${{ steps.login-ecr.outputs}}.docker_username_${{ secrets.AWS_ACCOUNT_ID }}_dkr_ecr_us_east_1_amazonaws_com # More information on these outputs can be found below in the 'Docker Credentials' section
      docker_password: ${{ steps.login-ecr.outputs}}.docker_password_${{ secrets.AWS_ACCOUNT_ID }}_dkr_ecr_us_east_1_amazonaws_com
  run-with-internal-service:
    name: Run something with an internal image as a service
    needs: login-to-amazon-ecr
    runs-on: ubuntu-latest
    services:
      internal-service:
        image: ${{ needs.login-to-amazon-ecr.outputs.registry }}/volunteers_db:latest
        credentials:
          username: ${{ needs.login-to-amazon-ecr.outputs.docker_username }}
          password: ${{ needs.login-to-amazon-ecr.outputs.docker_password }}
        ports:
          - "3306:3306"

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "14"

      - name: Install dependencies
        run: npm install

      - name: create ENV file
        run: cp .sample-env .env

      - name: Run integration tests
        run: npm run test:integration # Replace this with your test command

